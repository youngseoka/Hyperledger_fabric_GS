{"ast":null,"code":"import _objectSpread from\"/home/fabric/monitor_sk/fabric_explorer_nft/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/fabric/monitor_sk/fabric_explorer_nft/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/**\n *    SPDX-License-Identifier: Apache-2.0\n */ //import React from 'react';\nimport React,{useState,useEffect}from'react';import{withStyles}from'@material-ui/core/styles';import{connect}from'react-redux';import{HashRouter as Router,Route,Switch}from'react-router-dom';import BlocksView from'./View/BlocksView';import NetworkView from'./View/NetworkView';import TransactionsView from'./View/TransactionsView';import ChaincodeView from'./View/ChaincodeView';import DashboardView from'./View/DashboardView';import ChannelsView from'./View/ChannelsView';import{chartSelectors}from'../state/redux/charts';import{tableOperations,tableSelectors}from'../state/redux/tables';import{blockListType,chaincodeListType,channelsType,currentChannelType,dashStatsType,getTransactionType,peerListType,peerStatusType,transactionType,transactionByOrgType,transactionListType}from'./types';import PageNotFound from'./View/PageNotFound';import Private from'./Route';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var currentChannelSelector=chartSelectors.currentChannelSelector,blockActivitySelector=chartSelectors.blockActivitySelector,channelListSelector=chartSelectors.channelListSelector,dashStatsSelector=chartSelectors.dashStatsSelector,peerStatusSelector=chartSelectors.peerStatusSelector,transactionByOrgSelector=chartSelectors.transactionByOrgSelector;var blockListSelector=tableSelectors.blockListSelector,chaincodeListSelector=tableSelectors.chaincodeListSelector,channelsSelector=tableSelectors.channelsSelector,peerListSelector=tableSelectors.peerListSelector,transactionSelector=tableSelectors.transactionSelector,transactionListSelector=tableSelectors.transactionListSelector,blockListSearchSelector=tableSelectors.blockListSearchSelector,transactionListSearchSelector=tableSelectors.transactionListSearchSelector;var styles=function styles(theme){var type=theme.palette.type;var dark=type==='dark';return{main:{color:dark?'#ffffff':undefined}};};export var Main=function Main(props){var classes=props.classes,blockList=props.blockList,blockActivity=props.blockActivity,chaincodeList=props.chaincodeList,channels=props.channels,currentChannel=props.currentChannel,dashStats=props.dashStats,getTransaction=props.getTransaction,peerList=props.peerList,peerStatus=props.peerStatus,transaction=props.transaction,transactionByOrg=props.transactionByOrg,transactionList=props.transactionList,blockListSearch=props.blockListSearch,transactionListSearch=props.transactionListSearch,getBlockListSearch=props.getBlockListSearch,getTransactionListSearch=props.getTransactionListSearch;var blocksViewProps={blockList:blockList,blockListSearch:blockListSearch,getBlockListSearch:getBlockListSearch,transactionByOrg:transactionByOrg,currentChannel:currentChannel,getTransaction:getTransaction,transaction:transaction};var chaincodeViewProps={chaincodeList:chaincodeList};var channelsViewProps={channels:channels};var dashboardViewProps={blockList:blockList,dashStats:dashStats,peerStatus:peerStatus,transactionByOrg:transactionByOrg,blockActivity:blockActivity};var networkViewProps={peerList:peerList};var transactionsViewProps={currentChannel:currentChannel,transaction:transaction,transactionList:transactionList,getTransaction:getTransaction,transactionByOrg:transactionByOrg,transactionListSearch:transactionListSearch,getTransactionListSearch:getTransactionListSearch};var _useState=useState(''),_useState2=_slicedToArray(_useState,2),transactionId=_useState2[0],setTransactionId=_useState2[1];useEffect(function(){var windowUrl=window.location.search;var queryParams=new URLSearchParams(windowUrl);if(queryParams.get('tab')){setTransactionId(queryParams.get('transId'));var history=props.history;var routePath='/'+queryParams.get('tab');history.replace(routePath);}},[]);function removeTransactionId(){var windowUrl=window.location.search;var queryParams=new URLSearchParams(windowUrl);if(queryParams.get('tab')){queryParams.delete('tab');queryParams.delete('transId');}setTransactionId('');}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:classes.main,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Private,{exact:true,path:\"/\",render:function render(routeprops){return/*#__PURE__*/_jsx(DashboardView,_objectSpread({},_objectSpread(_objectSpread({},dashboardViewProps),routeprops)));}}),/*#__PURE__*/_jsx(Private,{exact:true,path:\"/blocks\",render:function render(routeprops){return/*#__PURE__*/_jsx(BlocksView,_objectSpread({},_objectSpread(_objectSpread({},blocksViewProps),routeprops)));}}),/*#__PURE__*/_jsx(Private,{exact:true,path:\"/chaincodes\",render:function render(routeprops){return/*#__PURE__*/_jsx(ChaincodeView,_objectSpread({},_objectSpread(_objectSpread({},chaincodeViewProps),routeprops)));}}),/*#__PURE__*/_jsx(Private,{exact:true,path:\"/channels\",render:function render(routeprops){return/*#__PURE__*/_jsx(ChannelsView,_objectSpread({},_objectSpread(_objectSpread({},channelsViewProps),routeprops)));}}),/*#__PURE__*/_jsx(Private,{exact:true,path:\"/network\",render:function render(routeprops){return/*#__PURE__*/_jsx(NetworkView,_objectSpread({},_objectSpread(_objectSpread({},networkViewProps),routeprops)));}}),/*#__PURE__*/_jsx(Private,{exact:true,path:\"/transactions\",render:function render(routeprops){return/*#__PURE__*/_jsx(TransactionsView,_objectSpread(_objectSpread({},_objectSpread(_objectSpread({},transactionsViewProps),routeprops)),{},{transactionId:transactionId,removeTransactionId:removeTransactionId}));}}),/*#__PURE__*/_jsx(Route,{exact:true,render:function render(routeprops){return/*#__PURE__*/_jsx(PageNotFound,_objectSpread({},routeprops));}})]})})});};var connectedComponent=connect(function(state){return{blockList:blockListSelector(state),chaincodeList:chaincodeListSelector(state),channelList:channelListSelector(state),channels:channelsSelector(state),currentChannel:currentChannelSelector(state),dashStats:dashStatsSelector(state),peerList:peerListSelector(state),peerStatus:peerStatusSelector(state),transaction:transactionSelector(state),transactionByOrg:transactionByOrgSelector(state),transactionList:transactionListSelector(state),blockListSearch:blockListSearchSelector(state),transactionListSearch:transactionListSearchSelector(state),blockActivity:blockActivitySelector(state)};},{getTransaction:tableOperations.transaction,getBlockListSearch:tableOperations.blockListSearch,getTransactionListSearch:tableOperations.transactionListSearch})(Main);export default withStyles(styles)(connectedComponent);","map":{"version":3,"sources":["/home/fabric/monitor_sk/fabric_explorer_nft/client/src/components/Main.js"],"names":["React","useState","useEffect","withStyles","connect","HashRouter","Router","Route","Switch","BlocksView","NetworkView","TransactionsView","ChaincodeView","DashboardView","ChannelsView","chartSelectors","tableOperations","tableSelectors","blockListType","chaincodeListType","channelsType","currentChannelType","dashStatsType","getTransactionType","peerListType","peerStatusType","transactionType","transactionByOrgType","transactionListType","PageNotFound","Private","currentChannelSelector","blockActivitySelector","channelListSelector","dashStatsSelector","peerStatusSelector","transactionByOrgSelector","blockListSelector","chaincodeListSelector","channelsSelector","peerListSelector","transactionSelector","transactionListSelector","blockListSearchSelector","transactionListSearchSelector","styles","theme","type","palette","dark","main","color","undefined","Main","props","classes","blockList","blockActivity","chaincodeList","channels","currentChannel","dashStats","getTransaction","peerList","peerStatus","transaction","transactionByOrg","transactionList","blockListSearch","transactionListSearch","getBlockListSearch","getTransactionListSearch","blocksViewProps","chaincodeViewProps","channelsViewProps","dashboardViewProps","networkViewProps","transactionsViewProps","transactionId","setTransactionId","windowUrl","window","location","search","queryParams","URLSearchParams","get","history","routePath","replace","removeTransactionId","delete","routeprops","connectedComponent","state","channelList"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\n//import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlocksView from './View/BlocksView';\nimport NetworkView from './View/NetworkView';\nimport TransactionsView from './View/TransactionsView';\nimport ChaincodeView from './View/ChaincodeView';\nimport DashboardView from './View/DashboardView';\nimport ChannelsView from './View/ChannelsView';\nimport { chartSelectors } from '../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../state/redux/tables';\nimport {\n\tblockListType,\n\tchaincodeListType,\n\tchannelsType,\n\tcurrentChannelType,\n\tdashStatsType,\n\tgetTransactionType,\n\tpeerListType,\n\tpeerStatusType,\n\ttransactionType,\n\ttransactionByOrgType,\n\ttransactionListType\n} from './types';\nimport PageNotFound from './View/PageNotFound';\n\nimport Private from './Route';\n\nconst {\n\tcurrentChannelSelector,\n\tblockActivitySelector,\n\tchannelListSelector,\n\tdashStatsSelector,\n\tpeerStatusSelector,\n\ttransactionByOrgSelector\n} = chartSelectors;\n\nconst {\n\tblockListSelector,\n\tchaincodeListSelector,\n\tchannelsSelector,\n\tpeerListSelector,\n\ttransactionSelector,\n\ttransactionListSelector,\n\tblockListSearchSelector,\n\ttransactionListSearchSelector\n} = tableSelectors;\n\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tmain: {\n\t\t\tcolor: dark ? '#ffffff' : undefined\n\t\t}\n\t};\n};\n\nexport const Main = props => {\n\tconst {\n\t\tclasses,\n\t\tblockList,\n\t\tblockActivity,\n\t\tchaincodeList,\n\t\tchannels,\n\t\tcurrentChannel,\n\t\tdashStats,\n\t\tgetTransaction,\n\t\tpeerList,\n\t\tpeerStatus,\n\t\ttransaction,\n\t\ttransactionByOrg,\n\t\ttransactionList,\n\t\tblockListSearch,\n\t\ttransactionListSearch,\n\t\tgetBlockListSearch,\n\t\tgetTransactionListSearch\n\t} = props;\n\n\tconst blocksViewProps = {\n\t\tblockList,\n\t\tblockListSearch,\n\t\tgetBlockListSearch,\n\t\ttransactionByOrg,\n\t\tcurrentChannel,\n\t\tgetTransaction,\n\t\ttransaction\n\t};\n\tconst chaincodeViewProps = {\n\t\tchaincodeList\n\t};\n\n\tconst channelsViewProps = {\n\t\tchannels\n\t};\n\n\tconst dashboardViewProps = {\n\t\tblockList,\n\t\tdashStats,\n\t\tpeerStatus,\n\t\ttransactionByOrg,\n\t\tblockActivity\n\t};\n\n\tconst networkViewProps = {\n\t\tpeerList\n\t};\n\n\tconst transactionsViewProps = {\n\t\tcurrentChannel,\n\t\ttransaction,\n\t\ttransactionList,\n\t\tgetTransaction,\n\t\ttransactionByOrg,\n\t\ttransactionListSearch,\n\t\tgetTransactionListSearch\n\t};\n\n\tconst [transactionId, setTransactionId] = useState('');\n\n\tuseEffect(() => {\n\t\tlet windowUrl = window.location.search;\n\t\tlet queryParams = new URLSearchParams(windowUrl);\n\t\tif (queryParams.get('tab')) {\n\t\t\tsetTransactionId(queryParams.get('transId'));\n\t\t\tconst { history } = props;\n\t\t\tlet routePath = '/' + queryParams.get('tab');\n\t\t\thistory.replace(routePath);\n\t\t}\n\t}, []);\n\n\tfunction removeTransactionId() {\n\t\tlet windowUrl = window.location.search;\n\t\tlet queryParams = new URLSearchParams(windowUrl);\n\t\tif (queryParams.get('tab')) {\n\t\t\tqueryParams.delete('tab');\n\t\t\tqueryParams.delete('transId');\n\t\t}\n\t\tsetTransactionId('');\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className={classes.main}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<DashboardView {...{ ...dashboardViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/blocks\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<BlocksView {...{ ...blocksViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/chaincodes\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChaincodeView {...{ ...chaincodeViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/channels\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChannelsView {...{ ...channelsViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/network\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<NetworkView {...{ ...networkViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/transactions\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<TransactionsView\n\t\t\t\t\t\t\t\t{...{ ...transactionsViewProps, ...routeprops }}\n\t\t\t\t\t\t\t\ttransactionId={transactionId}\n\t\t\t\t\t\t\t\tremoveTransactionId={removeTransactionId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact render={routeprops => <PageNotFound {...routeprops} />} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nMain.propTypes = {\n\tblockList: blockListType.isRequired,\n\tchaincodeList: chaincodeListType.isRequired,\n\tchannels: channelsType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tdashStats: dashStatsType.isRequired,\n\tgetTransaction: getTransactionType.isRequired,\n\tpeerList: peerListType.isRequired,\n\tpeerStatus: peerStatusType.isRequired,\n\ttransaction: transactionType.isRequired,\n\ttransactionByOrg: transactionByOrgType.isRequired,\n\ttransactionList: transactionListType.isRequired\n};\n\nconst connectedComponent = connect(\n\tstate => ({\n\t\tblockList: blockListSelector(state),\n\t\tchaincodeList: chaincodeListSelector(state),\n\t\tchannelList: channelListSelector(state),\n\t\tchannels: channelsSelector(state),\n\t\tcurrentChannel: currentChannelSelector(state),\n\t\tdashStats: dashStatsSelector(state),\n\t\tpeerList: peerListSelector(state),\n\t\tpeerStatus: peerStatusSelector(state),\n\t\ttransaction: transactionSelector(state),\n\t\ttransactionByOrg: transactionByOrgSelector(state),\n\t\ttransactionList: transactionListSelector(state),\n\t\tblockListSearch: blockListSearchSelector(state),\n\t\ttransactionListSearch: transactionListSearchSelector(state),\n\t\tblockActivity: blockActivitySelector(state)\n\t}),\n\t{\n\t\tgetTransaction: tableOperations.transaction,\n\t\tgetBlockListSearch: tableOperations.blockListSearch,\n\t\tgetTransactionListSearch: tableOperations.transactionListSearch\n\t}\n)(Main);\nexport default withStyles(styles)(connectedComponent);\n"]},"metadata":{},"sourceType":"module"}