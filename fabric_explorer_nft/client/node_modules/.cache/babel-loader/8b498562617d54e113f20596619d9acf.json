{"ast":null,"code":"import _classCallCheck from\"/home/fabric/monitor_sk/fabric_explorer_nft/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/fabric/monitor_sk/fabric_explorer_nft/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/fabric/monitor_sk/fabric_explorer_nft/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/fabric/monitor_sk/fabric_explorer_nft/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n *    SPDX-License-Identifier: Apache-2.0\n */import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';import{connect}from'react-redux';import moment from'moment-timezone';import{TabContent,TabPane,Nav,NavItem,NavLink}from'reactstrap';import classnames from'classnames';import{chartSelectors,chartOperations}from'../../state/redux/charts';import TimeChart from'./TimeChart';import{blockPerHourType,blockPerMinType,currentChannelType,getBlocksPerHourType,getBlocksPerMinType,getTransactionPerHourType,getTransactionPerMinType,transactionPerHourType,transactionPerMinType}from'../types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var blockPerHourSelector=chartSelectors.blockPerHourSelector,blockPerMinSelector=chartSelectors.blockPerMinSelector,currentChannelSelector=chartSelectors.currentChannelSelector,transactionPerHourSelector=chartSelectors.transactionPerHourSelector,transactionPerMinSelector=chartSelectors.transactionPerMinSelector;/* istanbul ignore next */var styles=function styles(theme){var type=theme.palette.type;var dark=type==='dark';return{chart:{color:dark?'#ffffff':undefined,backgroundColor:dark?'#453e68':undefined}};};export var ChartStats=/*#__PURE__*/function(_Component){_inherits(ChartStats,_Component);var _super=_createSuper(ChartStats);function ChartStats(props){var _this;_classCallCheck(this,ChartStats);_this=_super.call(this,props);_this.syncData=function(currentChannel){var _this$props=_this.props,getBlocksPerHour=_this$props.getBlocksPerHour,getBlocksPerMin=_this$props.getBlocksPerMin,getTransactionPerHour=_this$props.getTransactionPerHour,getTransactionPerMin=_this$props.getTransactionPerMin;getBlocksPerMin(currentChannel);getBlocksPerHour(currentChannel);getTransactionPerMin(currentChannel);getTransactionPerHour(currentChannel);};_this.timeDataSetup=function(){var chartData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var dataMax=0;var displayData=chartData.map(function(data){if(parseInt(data.count,10)>dataMax){dataMax=parseInt(data.count,10);}return{datetime:moment(data.datetime).tz(moment.tz.guess()).format('h:mm A'),count:data.count};});dataMax+=5;return{displayData:displayData,dataMax:dataMax};};_this.toggle=function(tab){_this.setState({activeTab:tab});};_this.state={activeTab:'1'};return _this;}_createClass(ChartStats,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.interVal=setInterval(function(){var currentChannel=_this2.props.currentChannel;_this2.syncData(currentChannel);},60000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interVal);}},{key:\"render\",value:function render(){var _this3=this;var activeTab=this.state.activeTab;var _this$props2=this.props,blockPerHour=_this$props2.blockPerHour,blockPerMin=_this$props2.blockPerMin,transactionPerHour=_this$props2.transactionPerHour,transactionPerMin=_this$props2.transactionPerMin,classes=_this$props2.classes;return/*#__PURE__*/_jsxs(\"div\",{className:classes.chart,children:[/*#__PURE__*/_jsxs(Nav,{tabs:true,children:[/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLink,{className:classnames({active:activeTab==='1'}),onClick:function onClick(){_this3.toggle('1');},children:\"BLOCKS / HOUR\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLink,{className:classnames({active:activeTab==='2'}),onClick:function onClick(){_this3.toggle('2');},children:\"BLOCKS / MIN\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLink,{className:classnames({active:activeTab==='3'}),onClick:function onClick(){_this3.toggle('3');},children:\"TX / HOUR\"})}),/*#__PURE__*/_jsx(NavItem,{children:/*#__PURE__*/_jsx(NavLink,{className:classnames({active:activeTab==='4'}),onClick:function onClick(){_this3.toggle('4');},children:\"TX / MIN\"})})]}),/*#__PURE__*/_jsxs(TabContent,{activeTab:activeTab,children:[/*#__PURE__*/_jsx(TabPane,{tabId:\"1\",children:/*#__PURE__*/_jsx(TimeChart,{chartData:this.timeDataSetup(blockPerHour)})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"2\",children:/*#__PURE__*/_jsx(TimeChart,{chartData:this.timeDataSetup(blockPerMin)})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"3\",children:/*#__PURE__*/_jsx(TimeChart,{chartData:this.timeDataSetup(transactionPerHour)})}),/*#__PURE__*/_jsx(TabPane,{tabId:\"4\",children:/*#__PURE__*/_jsx(TimeChart,{chartData:this.timeDataSetup(transactionPerMin)})})]})]});}}]);return ChartStats;}(Component);var mapStateToProps=function mapStateToProps(state){return{blockPerHour:blockPerHourSelector(state),blockPerMin:blockPerMinSelector(state),transactionPerHour:transactionPerHourSelector(state),transactionPerMin:transactionPerMinSelector(state),currentChannel:currentChannelSelector(state)};};var mapDispatchToProps={getBlocksPerHour:chartOperations.blockPerHour,getBlocksPerMin:chartOperations.blockPerMin,getTransactionPerHour:chartOperations.transactionPerHour,getTransactionPerMin:chartOperations.transactionPerMin};var connectedComponent=connect(mapStateToProps,mapDispatchToProps)(ChartStats);export default withStyles(styles)(connectedComponent);","map":{"version":3,"sources":["/home/fabric/monitor_sk/fabric_explorer_nft/client/src/components/Charts/ChartStats.js"],"names":["React","Component","withStyles","connect","moment","TabContent","TabPane","Nav","NavItem","NavLink","classnames","chartSelectors","chartOperations","TimeChart","blockPerHourType","blockPerMinType","currentChannelType","getBlocksPerHourType","getBlocksPerMinType","getTransactionPerHourType","getTransactionPerMinType","transactionPerHourType","transactionPerMinType","blockPerHourSelector","blockPerMinSelector","currentChannelSelector","transactionPerHourSelector","transactionPerMinSelector","styles","theme","type","palette","dark","chart","color","undefined","backgroundColor","ChartStats","props","syncData","currentChannel","getBlocksPerHour","getBlocksPerMin","getTransactionPerHour","getTransactionPerMin","timeDataSetup","chartData","dataMax","displayData","map","data","parseInt","count","datetime","tz","guess","format","toggle","tab","setState","activeTab","state","interVal","setInterval","clearInterval","blockPerHour","blockPerMin","transactionPerHour","transactionPerMin","classes","active","mapStateToProps","mapDispatchToProps","connectedComponent"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport moment from 'moment-timezone';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport { chartSelectors, chartOperations } from '../../state/redux/charts';\nimport TimeChart from './TimeChart';\nimport {\n\tblockPerHourType,\n\tblockPerMinType,\n\tcurrentChannelType,\n\tgetBlocksPerHourType,\n\tgetBlocksPerMinType,\n\tgetTransactionPerHourType,\n\tgetTransactionPerMinType,\n\ttransactionPerHourType,\n\ttransactionPerMinType\n} from '../types';\n\nconst {\n\tblockPerHourSelector,\n\tblockPerMinSelector,\n\tcurrentChannelSelector,\n\ttransactionPerHourSelector,\n\ttransactionPerMinSelector\n} = chartSelectors;\n\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tchart: {\n\t\t\tcolor: dark ? '#ffffff' : undefined,\n\t\t\tbackgroundColor: dark ? '#453e68' : undefined\n\t\t}\n\t};\n};\n\nexport class ChartStats extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveTab: '1'\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.interVal = setInterval(() => {\n\t\t\tconst { currentChannel } = this.props;\n\t\t\tthis.syncData(currentChannel);\n\t\t}, 60000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interVal);\n\t}\n\n\tsyncData = currentChannel => {\n\t\tconst {\n\t\t\tgetBlocksPerHour,\n\t\t\tgetBlocksPerMin,\n\t\t\tgetTransactionPerHour,\n\t\t\tgetTransactionPerMin\n\t\t} = this.props;\n\n\t\tgetBlocksPerMin(currentChannel);\n\t\tgetBlocksPerHour(currentChannel);\n\t\tgetTransactionPerMin(currentChannel);\n\t\tgetTransactionPerHour(currentChannel);\n\t};\n\n\ttimeDataSetup = (chartData = []) => {\n\t\tlet dataMax = 0;\n\t\tconst displayData = chartData.map(data => {\n\t\t\tif (parseInt(data.count, 10) > dataMax) {\n\t\t\t\tdataMax = parseInt(data.count, 10);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdatetime: moment(data.datetime)\n\t\t\t\t\t.tz(moment.tz.guess())\n\t\t\t\t\t.format('h:mm A'),\n\t\t\t\tcount: data.count\n\t\t\t};\n\t\t});\n\n\t\tdataMax += 5;\n\n\t\treturn {\n\t\t\tdisplayData,\n\t\t\tdataMax\n\t\t};\n\t};\n\n\ttoggle = tab => {\n\t\tthis.setState({\n\t\t\tactiveTab: tab\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { activeTab } = this.state;\n\t\tconst {\n\t\t\tblockPerHour,\n\t\t\tblockPerMin,\n\t\t\ttransactionPerHour,\n\t\t\ttransactionPerMin,\n\t\t\tclasses\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.chart}>\n\t\t\t\t<Nav tabs>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t\t\tactive: activeTab === '1'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.toggle('1');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBLOCKS / HOUR\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t\t\tactive: activeTab === '2'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.toggle('2');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBLOCKS / MIN\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t\t\tactive: activeTab === '3'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.toggle('3');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTX / HOUR\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tclassName={classnames({\n\t\t\t\t\t\t\t\tactive: activeTab === '4'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.toggle('4');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTX / MIN\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</NavItem>\n\t\t\t\t</Nav>\n\t\t\t\t<TabContent activeTab={activeTab}>\n\t\t\t\t\t<TabPane tabId=\"1\">\n\t\t\t\t\t\t<TimeChart chartData={this.timeDataSetup(blockPerHour)} />\n\t\t\t\t\t</TabPane>\n\t\t\t\t\t<TabPane tabId=\"2\">\n\t\t\t\t\t\t<TimeChart chartData={this.timeDataSetup(blockPerMin)} />\n\t\t\t\t\t</TabPane>\n\t\t\t\t\t<TabPane tabId=\"3\">\n\t\t\t\t\t\t<TimeChart chartData={this.timeDataSetup(transactionPerHour)} />\n\t\t\t\t\t</TabPane>\n\t\t\t\t\t<TabPane tabId=\"4\">\n\t\t\t\t\t\t<TimeChart chartData={this.timeDataSetup(transactionPerMin)} />\n\t\t\t\t\t</TabPane>\n\t\t\t\t</TabContent>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nChartStats.propTypes = {\n\tblockPerHour: blockPerHourType.isRequired,\n\tblockPerMin: blockPerMinType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tgetBlocksPerHour: getBlocksPerHourType.isRequired,\n\tgetBlocksPerMin: getBlocksPerMinType.isRequired,\n\tgetTransactionPerHour: getTransactionPerHourType.isRequired,\n\tgetTransactionPerMin: getTransactionPerMinType.isRequired,\n\ttransactionPerHour: transactionPerHourType.isRequired,\n\ttransactionPerMin: transactionPerMinType.isRequired\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tblockPerHour: blockPerHourSelector(state),\n\t\tblockPerMin: blockPerMinSelector(state),\n\t\ttransactionPerHour: transactionPerHourSelector(state),\n\t\ttransactionPerMin: transactionPerMinSelector(state),\n\t\tcurrentChannel: currentChannelSelector(state)\n\t};\n};\n\nconst mapDispatchToProps = {\n\tgetBlocksPerHour: chartOperations.blockPerHour,\n\tgetBlocksPerMin: chartOperations.blockPerMin,\n\tgetTransactionPerHour: chartOperations.transactionPerHour,\n\tgetTransactionPerMin: chartOperations.transactionPerMin\n};\n\nconst connectedComponent = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ChartStats);\nexport default withStyles(styles)(connectedComponent);\n"]},"metadata":{},"sourceType":"module"}