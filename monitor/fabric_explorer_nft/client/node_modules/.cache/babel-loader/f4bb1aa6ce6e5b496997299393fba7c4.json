{"ast":null,"code":"var hsl = require(\"./hsl\");\n\nvar hex = require(\"./hex\");\n\nvar rgb = require(\"./rgb\");\n\nvar hsl2rgb = require(\"../convert/hsl2rgb\");\n\nfunction hsl2rgbParse(color) {\n  var h = hsl(color);\n  var r = hsl2rgb(h); // handle alpha since hsl2rgb doesn't know (or care!) about it\n\n  if (h.length === 4) {\n    r.push(h[3]);\n  }\n\n  return r;\n}\n\nvar space2parser = {\n  \"#\": hex,\n  \"hsl\": hsl2rgbParse,\n  \"rgb\": rgb\n};\n\nfunction parse(color) {\n  for (var scheme in space2parser) {\n    if (color.indexOf(scheme) === 0) {\n      return space2parser[scheme](color);\n    }\n  }\n}\n\nparse.rgb = rgb;\nparse.hsl = hsl;\nparse.hex = hex;\nmodule.exports = parse;","map":{"version":3,"sources":["/fabric_explorer_nft/client/node_modules/pure-color/parse/index.js"],"names":["hsl","require","hex","rgb","hsl2rgb","hsl2rgbParse","color","h","r","length","push","space2parser","parse","scheme","indexOf","module","exports"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,oBAAD,CAArB;;AAEA,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,CAAC,GAAGP,GAAG,CAACM,KAAD,CAAX;AACA,MAAIE,CAAC,GAAGJ,OAAO,CAACG,CAAD,CAAf,CAF2B,CAI3B;;AACA,MAAGA,CAAC,CAACE,MAAF,KAAa,CAAhB,EAAmB;AACjBD,IAAAA,CAAC,CAACE,IAAF,CAAOH,CAAC,CAAC,CAAD,CAAR;AACD;;AAED,SAAOC,CAAP;AACD;;AAED,IAAIG,YAAY,GAAG;AACjB,OAAMT,GADW;AAEjB,SAAQG,YAFS;AAGjB,SAAQF;AAHS,CAAnB;;AAMA,SAASS,KAAT,CAAeN,KAAf,EAAsB;AACpB,OAAI,IAAIO,MAAR,IAAkBF,YAAlB,EAAgC;AAC9B,QAAGL,KAAK,CAACQ,OAAN,CAAcD,MAAd,MAA0B,CAA7B,EAAgC;AAC9B,aAAOF,YAAY,CAACE,MAAD,CAAZ,CAAqBP,KAArB,CAAP;AACD;AACF;AACF;;AAEDM,KAAK,CAACT,GAAN,GAAYA,GAAZ;AACAS,KAAK,CAACZ,GAAN,GAAYA,GAAZ;AACAY,KAAK,CAACV,GAAN,GAAYA,GAAZ;AAEAa,MAAM,CAACC,OAAP,GAAiBJ,KAAjB","sourcesContent":["var hsl = require(\"./hsl\");\nvar hex = require(\"./hex\");\nvar rgb = require(\"./rgb\");\nvar hsl2rgb = require(\"../convert/hsl2rgb\");\n\nfunction hsl2rgbParse(color) {\n  var h = hsl(color);\n  var r = hsl2rgb(h);\n\n  // handle alpha since hsl2rgb doesn't know (or care!) about it\n  if(h.length === 4) {\n    r.push(h[3]);\n  }\n\n  return r;\n}\n\nvar space2parser = {\n  \"#\" : hex,\n  \"hsl\" : hsl2rgbParse,\n  \"rgb\" : rgb\n};\n\nfunction parse(color) {\n  for(var scheme in space2parser) {\n    if(color.indexOf(scheme) === 0) {\n      return space2parser[scheme](color);\n    }\n  }\n}\n\nparse.rgb = rgb;\nparse.hsl = hsl;\nparse.hex = hex;\n\nmodule.exports = parse;"]},"metadata":{},"sourceType":"script"}