{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames'; //\n// import _ from './utils'\n\nvar defaultButton = function defaultButton(props) {\n  return React.createElement('button', _extends({\n    type: 'button'\n  }, props, {\n    className: '-btn'\n  }), props.children);\n};\n\nvar ReactTablePagination = function (_Component) {\n  _inherits(ReactTablePagination, _Component);\n\n  function ReactTablePagination(props) {\n    _classCallCheck(this, ReactTablePagination);\n\n    var _this = _possibleConstructorReturn(this, (ReactTablePagination.__proto__ || Object.getPrototypeOf(ReactTablePagination)).call(this));\n\n    _this.getSafePage = _this.getSafePage.bind(_this);\n    _this.changePage = _this.changePage.bind(_this);\n    _this.applyPage = _this.applyPage.bind(_this);\n    _this.state = {\n      page: props.page\n    };\n    return _this;\n  }\n\n  _createClass(ReactTablePagination, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        page: nextProps.page\n      });\n    }\n  }, {\n    key: 'getSafePage',\n    value: function getSafePage(page) {\n      if (Number.isNaN(page)) {\n        page = this.props.page;\n      }\n\n      return Math.min(Math.max(page, 0), this.props.pages - 1);\n    }\n  }, {\n    key: 'changePage',\n    value: function changePage(page) {\n      page = this.getSafePage(page);\n      this.setState({\n        page: page\n      });\n\n      if (this.props.page !== page) {\n        this.props.onPageChange(page);\n      }\n    }\n  }, {\n    key: 'applyPage',\n    value: function applyPage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      var page = this.state.page;\n      this.changePage(page === '' ? this.props.page : page);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          pages = _props.pages,\n          page = _props.page,\n          showPageSizeOptions = _props.showPageSizeOptions,\n          pageSizeOptions = _props.pageSizeOptions,\n          pageSize = _props.pageSize,\n          showPageJump = _props.showPageJump,\n          canPrevious = _props.canPrevious,\n          canNext = _props.canNext,\n          onPageSizeChange = _props.onPageSizeChange,\n          className = _props.className,\n          _props$PreviousCompon = _props.PreviousComponent,\n          PreviousComponent = _props$PreviousCompon === undefined ? defaultButton : _props$PreviousCompon,\n          _props$NextComponent = _props.NextComponent,\n          NextComponent = _props$NextComponent === undefined ? defaultButton : _props$NextComponent;\n      return React.createElement('div', {\n        className: classnames(className, '-pagination'),\n        style: this.props.style\n      }, React.createElement('div', {\n        className: '-previous'\n      }, React.createElement(PreviousComponent, {\n        onClick: function onClick() {\n          if (!canPrevious) return;\n\n          _this2.changePage(page - 1);\n        },\n        disabled: !canPrevious\n      }, this.props.previousText)), React.createElement('div', {\n        className: '-center'\n      }, React.createElement('span', {\n        className: '-pageInfo'\n      }, this.props.pageText, ' ', showPageJump ? React.createElement('div', {\n        className: '-pageJump'\n      }, React.createElement('input', {\n        type: this.state.page === '' ? 'text' : 'number',\n        onChange: function onChange(e) {\n          var val = e.target.value;\n          var page = val - 1;\n\n          if (val === '') {\n            return _this2.setState({\n              page: val\n            });\n          }\n\n          _this2.setState({\n            page: _this2.getSafePage(page)\n          });\n        },\n        value: this.state.page === '' ? '' : this.state.page + 1,\n        onBlur: this.applyPage,\n        onKeyPress: function onKeyPress(e) {\n          if (e.which === 13 || e.keyCode === 13) {\n            _this2.applyPage();\n          }\n        }\n      })) : React.createElement('span', {\n        className: '-currentPage'\n      }, page + 1), ' ', this.props.ofText, ' ', React.createElement('span', {\n        className: '-totalPages'\n      }, pages || 1)), showPageSizeOptions && React.createElement('span', {\n        className: 'select-wrap -pageSizeOptions'\n      }, React.createElement('select', {\n        onChange: function onChange(e) {\n          return onPageSizeChange(Number(e.target.value));\n        },\n        value: pageSize\n      }, pageSizeOptions.map(function (option, i) {\n        return (// eslint-disable-next-line react/no-array-index-key\n          React.createElement('option', {\n            key: i,\n            value: option\n          }, option, ' ', _this2.props.rowsText)\n        );\n      })))), React.createElement('div', {\n        className: '-next'\n      }, React.createElement(NextComponent, {\n        onClick: function onClick() {\n          if (!canNext) return;\n\n          _this2.changePage(page + 1);\n        },\n        disabled: !canNext\n      }, this.props.nextText)));\n    }\n  }]);\n\n  return ReactTablePagination;\n}(Component);\n\nexport default ReactTablePagination;","map":{"version":3,"sources":["../src/pagination.js"],"names":["defaultButton","props","children","ReactTablePagination","Component","page","nextProps","Number","Math","e","pages","showPageSizeOptions","pageSizeOptions","pageSize","showPageJump","canPrevious","canNext","onPageSizeChange","className","PreviousComponent","NextComponent","classnames","previousText","val","rowsText","nextText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport classnames from 'classnames'\n//\n// import _ from './utils'\n\nconst defaultButton = props => (\n  <button type=\"button\" {...props} className=\"-btn\">\n    {props.children}\n  </button>\n)\n\nexport default class ReactTablePagination extends Component {\n  constructor (props) {\n    super()\n\n    this.getSafePage = this.getSafePage.bind(this)\n    this.changePage = this.changePage.bind(this)\n    this.applyPage = this.applyPage.bind(this)\n\n    this.state = {\n      page: props.page,\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.setState({ page: nextProps.page })\n  }\n\n  getSafePage (page) {\n    if (Number.isNaN(page)) {\n      page = this.props.page\n    }\n    return Math.min(Math.max(page, 0), this.props.pages - 1)\n  }\n\n  changePage (page) {\n    page = this.getSafePage(page)\n    this.setState({ page })\n    if (this.props.page !== page) {\n      this.props.onPageChange(page)\n    }\n  }\n\n  applyPage (e) {\n    if (e) {\n      e.preventDefault()\n    }\n    const page = this.state.page\n    this.changePage(page === '' ? this.props.page : page)\n  }\n\n  render () {\n    const {\n      // Computed\n      pages,\n      // Props\n      page,\n      showPageSizeOptions,\n      pageSizeOptions,\n      pageSize,\n      showPageJump,\n      canPrevious,\n      canNext,\n      onPageSizeChange,\n      className,\n      PreviousComponent = defaultButton,\n      NextComponent = defaultButton,\n    } = this.props\n\n    return (\n      <div className={classnames(className, '-pagination')} style={this.props.style}>\n        <div className=\"-previous\">\n          <PreviousComponent\n            onClick={() => {\n              if (!canPrevious) return\n              this.changePage(page - 1)\n            }}\n            disabled={!canPrevious}\n          >\n            {this.props.previousText}\n          </PreviousComponent>\n        </div>\n        <div className=\"-center\">\n          <span className=\"-pageInfo\">\n            {this.props.pageText}{' '}\n            {showPageJump ? (\n              <div className=\"-pageJump\">\n                <input\n                  type={this.state.page === '' ? 'text' : 'number'}\n                  onChange={e => {\n                    const val = e.target.value\n                    const page = val - 1\n                    if (val === '') {\n                      return this.setState({ page: val })\n                    }\n                    this.setState({ page: this.getSafePage(page) })\n                  }}\n                  value={this.state.page === '' ? '' : this.state.page + 1}\n                  onBlur={this.applyPage}\n                  onKeyPress={e => {\n                    if (e.which === 13 || e.keyCode === 13) {\n                      this.applyPage()\n                    }\n                  }}\n                />\n              </div>\n            ) : (\n              <span className=\"-currentPage\">{page + 1}</span>\n            )}{' '}\n            {this.props.ofText} <span className=\"-totalPages\">{pages || 1}</span>\n          </span>\n          {showPageSizeOptions && (\n            <span className=\"select-wrap -pageSizeOptions\">\n              <select onChange={e => onPageSizeChange(Number(e.target.value))} value={pageSize}>\n                {pageSizeOptions.map((option, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <option key={i} value={option}>\n                    {option} {this.props.rowsText}\n                  </option>\n                ))}\n              </select>\n            </span>\n          )}\n        </div>\n        <div className=\"-next\">\n          <NextComponent\n            onClick={() => {\n              if (!canNext) return\n              this.changePage(page + 1)\n            }}\n            disabled={!canNext}\n          >\n            {this.props.nextText}\n          </NextComponent>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}