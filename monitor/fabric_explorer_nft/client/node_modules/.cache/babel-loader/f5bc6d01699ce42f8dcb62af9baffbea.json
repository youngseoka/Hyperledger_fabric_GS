{"ast":null,"code":"/**\n *    SPDX-License-Identifier: Apache-2.0\n */import{combineReducers}from'redux';import types from'./types';/* Reducers for Dashboard Charts */var initialState={};var blockPerHourReducer=function blockPerHourReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.BLOCK_CHART_HOUR){return{rows:action.payload.blockPerHour.rows,loaded:true,errors:action.errors};}else{return state;}};var errorMessageReducer=function errorMessageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.ERROR_MESSAGE){return{error:action.payload};}else{return state;}};var blockPerMinReducer=function blockPerMinReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.BLOCK_CHART_MIN){return{rows:action.payload.blockPerMin.rows,loaded:true,errors:action.errors};}else{return state;}};var channelListReducer=function channelListReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.CHANNEL_LIST){return{list:action.payload.channels,loaded:true,errors:action.errors};}else{return state;}};var channelReducer=function channelReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.CHANNEL||action.type===types.CHANGE_CHANNEL){return action.payload.channel;}else{return state;}};var dashStatsReducer=function dashStatsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.DASHBOARD_STATS){return action.payload;}else{return state;}};var blockActivityReducer=function blockActivityReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.BLOCK_ACTIVITY){return{rows:action.payload.row,loaded:true,errors:action.errors};}else{return state;}};var notificationReducer=function notificationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.NOTIFICATION_LOAD){return action.payload.notification;}else{return state;}};var peerStatusReducer=function peerStatusReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.PEER_STATUS){return{list:action.payload.peers,loaded:true,errors:action.errors};}else{return state;}};var transactionByOrgReducer=function transactionByOrgReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.TRANSACTION_CHART_ORG){return{rows:action.payload.rows,loaded:true,errors:action.errors};}else{return state;}};var transactionPerHourReducer=function transactionPerHourReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.TRANSACTION_CHART_HOUR){return{rows:action.payload.transactionPerHour.rows,loaded:true,errors:action.errors};}else{return state;}};var transactionPerMinReducer=function transactionPerMinReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(action.type===types.TRANSACTION_CHART_MIN){return{rows:action.payload.transactionPerMin.rows,loaded:true,errors:action.errors};}else{return state;}};var reducer=combineReducers({blockPerHour:blockPerHourReducer,blockPerMin:blockPerMinReducer,channel:channelReducer,channelList:channelListReducer,dashStats:dashStatsReducer,notification:notificationReducer,peerStatus:peerStatusReducer,transactionByOrg:transactionByOrgReducer,transactionPerHour:transactionPerHourReducer,transactionPerMin:transactionPerMinReducer,errorMessage:errorMessageReducer,blockActivity:blockActivityReducer});export default reducer;","map":{"version":3,"sources":["/fabric_explorer_nft/client/src/state/redux/charts/reducers.js"],"names":["combineReducers","types","initialState","blockPerHourReducer","state","action","type","BLOCK_CHART_HOUR","rows","payload","blockPerHour","loaded","errors","errorMessageReducer","ERROR_MESSAGE","error","blockPerMinReducer","BLOCK_CHART_MIN","blockPerMin","channelListReducer","CHANNEL_LIST","list","channels","channelReducer","CHANNEL","CHANGE_CHANNEL","channel","dashStatsReducer","DASHBOARD_STATS","blockActivityReducer","BLOCK_ACTIVITY","row","notificationReducer","NOTIFICATION_LOAD","notification","peerStatusReducer","PEER_STATUS","peers","transactionByOrgReducer","TRANSACTION_CHART_ORG","transactionPerHourReducer","TRANSACTION_CHART_HOUR","transactionPerHour","transactionPerMinReducer","TRANSACTION_CHART_MIN","transactionPerMin","reducer","channelList","dashStats","peerStatus","transactionByOrg","errorMessage","blockActivity"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { combineReducers } from 'redux';\nimport types from './types';\n\n/* Reducers for Dashboard Charts */\nconst initialState = {};\n\nconst blockPerHourReducer = (state = initialState, action = {}) => {\n  if (action.type === types.BLOCK_CHART_HOUR) {\n    return {\n      rows: action.payload.blockPerHour.rows,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\nconst errorMessageReducer = (state = initialState, action = {}) => {\n  if (action.type === types.ERROR_MESSAGE) {\n    return {\n      error: action.payload,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst blockPerMinReducer = (state = initialState, action = {}) => {\n  if (action.type === types.BLOCK_CHART_MIN) {\n    return {\n      rows: action.payload.blockPerMin.rows,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst channelListReducer = (state = initialState, action = {}) => {\n  if (action.type === types.CHANNEL_LIST) {\n    return {\n      list: action.payload.channels,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst channelReducer = (state = initialState, action = {}) => {\n  if (action.type === types.CHANNEL || action.type === types.CHANGE_CHANNEL) {\n    return action.payload.channel;\n  } else {\n    return state;\n  }\n};\n\nconst dashStatsReducer = (state = initialState, action = {}) => {\n  if (action.type === types.DASHBOARD_STATS) {\n    return action.payload;\n  } else {\n    return state;\n  }\n};\nconst blockActivityReducer = (state = initialState, action = {}) => {\n  if (action.type === types.BLOCK_ACTIVITY) {\n    return {\n      rows: action.payload.row,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\nconst notificationReducer = (state = initialState, action = {}) => {\n  if (action.type === types.NOTIFICATION_LOAD) {\n    return action.payload.notification;\n  } else {\n    return state;\n  }\n};\n\nconst peerStatusReducer = (state = initialState, action = {}) => {\n  if (action.type === types.PEER_STATUS) {\n    return {\n      list: action.payload.peers,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst transactionByOrgReducer = (state = initialState, action = {}) => {\n  if (action.type === types.TRANSACTION_CHART_ORG) {\n    return {\n      rows: action.payload.rows,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst transactionPerHourReducer = (state = initialState, action = {}) => {\n  if (action.type === types.TRANSACTION_CHART_HOUR) {\n    return {\n      rows: action.payload.transactionPerHour.rows,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst transactionPerMinReducer = (state = initialState, action = {}) => {\n  if (action.type === types.TRANSACTION_CHART_MIN) {\n    return {\n      rows: action.payload.transactionPerMin.rows,\n      loaded: true,\n      errors: action.errors,\n    };\n  } else {\n    return state;\n  }\n};\n\nconst reducer = combineReducers({\n  blockPerHour: blockPerHourReducer,\n  blockPerMin: blockPerMinReducer,\n  channel: channelReducer,\n  channelList: channelListReducer,\n  dashStats: dashStatsReducer,\n  notification: notificationReducer,\n  peerStatus: peerStatusReducer,\n  transactionByOrg: transactionByOrgReducer,\n  transactionPerHour: transactionPerHourReducer,\n  transactionPerMin: transactionPerMinReducer,\n  errorMessage: errorMessageReducer,\n  blockActivity: blockActivityReducer,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}