{"ast":null,"code":"/**\n *    SPDX-License-Identifier: Apache-2.0\n */import React from'react';import matchSorter from'match-sorter';import ReactTable from'../Styled/Table';import{peerListType}from'../types';/* istanbul ignore next */import{jsx as _jsx}from\"react/jsx-runtime\";var Peers=function Peers(_ref){var peerList=_ref.peerList;var columnHeaders=[{Header:'Peer Name',accessor:'server_hostname',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['server_hostname']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true},{Header:'Request Url',accessor:'requests',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['requests']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true},{Header:'Peer Type',accessor:'peer_type',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['peer_type']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true},{Header:'MSPID',accessor:'mspid',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['mspid']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true},{Header:'Ledger Height',columns:[{Header:'High',accessor:'ledger_height_high',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['ledger_height_high']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true},{Header:'Low',accessor:'ledger_height_low',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['ledger_height_low']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true},{Header:'Unsigned',id:'ledger_height_unsigned',accessor:function accessor(d){return d.ledger_height_unsigned.toString();},filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['ledger_height_unsigned']},{threshold:matchSorter.rankings.SIMPLEMATCH});},filterAll:true}]}];return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ReactTable,{data:peerList,columns:columnHeaders,defaultPageSize:5,filterable:true,minRows:0,showPagination:peerList.length>=5})});};export default Peers;","map":{"version":3,"sources":["/fabric_explorer_nft/client/src/components/Lists/Peers.js"],"names":["React","matchSorter","ReactTable","peerListType","Peers","peerList","columnHeaders","Header","accessor","filterMethod","filter","rows","value","keys","threshold","rankings","SIMPLEMATCH","filterAll","columns","id","d","ledger_height_unsigned","toString","length"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport matchSorter from 'match-sorter';\nimport ReactTable from '../Styled/Table';\nimport { peerListType } from '../types';\n\n/* istanbul ignore next */\nconst Peers = ({ peerList }) => {\n\tconst columnHeaders = [\n\t\t{\n\t\t\tHeader: 'Peer Name',\n\t\t\taccessor: 'server_hostname',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['server_hostname'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Request Url',\n\t\t\taccessor: 'requests',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['requests'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Peer Type',\n\t\t\taccessor: 'peer_type',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['peer_type'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'MSPID',\n\t\t\taccessor: 'mspid',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['mspid'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Ledger Height',\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\tHeader: 'High',\n\t\t\t\t\taccessor: 'ledger_height_high',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_high'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Low',\n\t\t\t\t\taccessor: 'ledger_height_low',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_low'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Unsigned',\n\t\t\t\t\tid: 'ledger_height_unsigned',\n\t\t\t\t\taccessor: d => d.ledger_height_unsigned.toString(),\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_unsigned'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<ReactTable\n\t\t\t\tdata={peerList}\n\t\t\t\tcolumns={columnHeaders}\n\t\t\t\tdefaultPageSize={5}\n\t\t\t\tfilterable\n\t\t\t\tminRows={0}\n\t\t\t\tshowPagination={peerList.length >= 5}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nPeers.propTypes = {\n\tpeerList: peerListType.isRequired\n};\n\nexport default Peers;\n"]},"metadata":{},"sourceType":"module"}